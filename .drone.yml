kind: pipeline
type: docker
name: TestJava

# drone构建步骤
steps:
  # 1.maven打包
  - name: maven compile
    image: maven:3.8-openjdk-11
    volumes:
      # maven构建缓存
      - name: cache
        path: /root/.m2
      # 挂载宿主机的目录
      - name: data
        path: /home
    commands:
      # 开始打包maven工程
      - mvn clean package -Dmaven.test.skip=true
      # 将打包后的文件复制到宿主机映射目录
      - pwd
      - ls -al
      - cp /drone/src/server-zuul/target/server-zuul-0.0.1-SNAPSHOT.jar /home
      - cp /drone/src/server-log/target/server-log-0.0.1-SNAPSHOT.jar /home
      - cp /drone/src/server-zuul/target/server-file-0.0.1-SNAPSHOT.jar /home
      - cp /drone/src/server-zuul/target/server-product-0.0.1-SNAPSHOT.jar /home
      - cp /drone/src/server-zuul/target/server-admin-0.0.1-SNAPSHOT.jar /home
      - cp /drone/src/server-zuul/target/server-monitor-0.0.1-SNAPSHOT.jar /home
      - cp /drone/src/server-zuul/target/server-message-0.0.1-SNAPSHOT.jar /home
      - cp /drone/src/server-zuul/target/server-core-0.0.1-SNAPSHOT.jar /home
      - cp /drone/src/server-zuul/target/server-consumer-0.0.1-SNAPSHOT.jar /home
      - cp /drone/src/server-zuul/target/server-backup-0.0.1-SNAPSHOT.jar /home
      - cp /drone/src/server-zuul/target/server-common-0.0.1-SNAPSHOT.jar /home
      # - cp ./Dockerfile /home

  # 2.使用ssh访问主机制作镜像并运行
  - name: ssh commands
    image: appleboy/drone-ssh:1.5.7
    settings:
      host: 0.0.0.0
      username: drone
      password:
        # 从drone仓库配置中秘密空间读取密码
        from_secret: drone
      port: 22
      script:
        - echo =======暂停容器=======
        - docker stop `docker ps -a | grep springdemo | awk '{print $1}' `
        - echo =======暂停旧容器和镜像=======
        - docker rm -f `docker ps -a | grep springdemo | awk '{print $1}' `
        - docker rmi `docker images | grep springdemo | awk '{print $3}' `
        - echo =======开始构建新镜像=======
        - cd /data/drone/helloDemo
        - docker build -t springdemo:v1 .
        - echo =======开始部署应用=======
        - docker run -d -p 8188:8180 --name springdemo springdemo:v1
        - echo =======清理构建文件=======
        # - rm -rf *
        - echo =======部署成功=======
        - echo =====TEST!======

  # 3.钉钉通知
  # - name: dingTalk notification
  #   pull: if-not-exists
  #   image: guoxudongdocker/drone-dingtalk:latest
  #   settings:
  #     token:
  #       from_secret: dingtalk_token
  #     type: markdown
  #     message_color: true
  #     message_pic: true
  #     sha_link: true
  #   when:
  #     status: [failure, success]

# 挂载的主机卷，可以映射到docker容器中
volumes:
  # maven构建缓存
  - name: cache
    host:
      # path: /tmp/cache/.m2
      path: /home/maven/build
  # maven构建后与宿主机通信的共享目录
  - name: data
    host:
      path: /home/maven/cache
